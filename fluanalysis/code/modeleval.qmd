---
title: "Flu Analysis"
subtitle: "Model Evaluation"
author: "Seth Lattner"
output:
  html_document:
    toc: FALSE
---

This is the final file of a four-part data analysis exercise, conducted on the dataset from McKay et al 2020, found [here](https://doi.org/10.5061/dryad.51c59zw4v). This file contains model fitting and model performance evaluation. 

#### Load Data/Packages

```{r, warning=FALSE, message=FALSE}
#load necessary packages
library(tidyverse)
library(tidymodels)
library(here)
library(performance)
library(dplyr)
library(yardstick)
```

```{r, message=FALSE}
#load and view data
flu_data <- readRDS(here::here("fluanalysis", "data", "flu_data_clean.RDS"))
glimpse(flu_data)
```

#### Multivariate Model 

Create training and testing datasets from the original data.

```{r}
#Fix random numbers by setting seed
set.seed(1999)
# Put 3/4 of the data into the training set 
data_split <- initial_split(flu_data, prop = 3/4)

# Create data frames for the two sets:
train_data <- training(data_split)
test_data  <- testing(data_split)
```

Create recipe and set engine

```{r}
#create recipe
flu_rec <- recipe(Nausea ~ ., data = train_data)

#set engine
log_reg <- 
  logistic_reg() %>%
  set_engine("glm")
```

Create workflow and fit the training data

```{r}
#create workflow
flu_flow <- 
  workflow() %>%
  add_model(log_reg) %>%
  add_recipe(flu_rec)

#fit to training data
flu_fit <-
  flu_flow %>%
  fit(data = train_data)
```

Extract model fit

```{r}
flu_fit %>%
  extract_fit_parsnip() %>% 
  tidy()
```

Fit testing data using model created from training data

```{r}
predict(flu_fit, test_data)
```
```{r}
flu_aug <- 
  augment(flu_fit, test_data)

flu_aug %>%
  select(Nausea, .pred_No, .pred_Yes)
```

```{r}
flu_aug %>%
  roc_curve(truth = Nausea, .pred_No) %>%
  autoplot()
```

```{r}
flu_aug %>%
  roc_auc(truth = Nausea, .pred_No)
```

#### Univariate Model

Create recipe and set engine

```{r}
#create recipe
flu_rec2 <- recipe(Nausea ~ RunnyNose, data = train_data)
```

Create workflow and fit the training data

```{r}
#create workflow
flu_flow2 <- 
  workflow() %>%
  add_model(log_reg) %>%
  add_recipe(flu_rec2)

#fit to training data
flu_fit2 <-
  flu_flow2 %>%
  fit(data = train_data)
```

Extract model fit

```{r}
flu_fit2 %>%
  extract_fit_parsnip() %>% 
  tidy()
```

Fit testing data using model created from training data

```{r}
predict(flu_fit2, test_data)
```
```{r}
flu_aug2 <- 
  augment(flu_fit2, test_data)

flu_aug2 %>%
  select(Nausea, .pred_No, .pred_Yes)
```

```{r}
flu_aug2 %>%
  roc_curve(truth = Nausea, .pred_No) %>%
  autoplot()
```

```{r}
flu_aug2 %>%
  roc_auc(truth = Nausea, .pred_No)
```

# This section added by Raquel Francisco
### Working with continous variable (BodyTemp)
```{r}
##Will use as much as premade data/code as possible

#create recipe
flu_rec3 <- recipe(BodyTemp ~ ., data = train_data)

#reset engine
lm_reg <- 
  linear_reg() %>%
  set_engine("lm")

#create workflow
flu_flow3 <- 
  workflow() %>%
  add_model(lm_reg) %>%
  add_recipe(flu_rec3)

#fit to training data
flu_fit3 <-
  flu_flow3 %>%
  fit(data = train_data)

flu_fit3 %>% 
  extract_fit_parsnip() %>% 
  tidy()
```


```{r}
#Use a trained workflow to predict
predict(flu_fit3, train_data)

#On trained data
flu_aug3train <- 
  augment(flu_fit3, train_data)

flu_aug3train %>%
  select(BodyTemp, .pred)

#flu_aug3train %>%
#  rmse(BodyTemp , .pred)#Unable to get this to run!)

#On test data
flu_aug3test <- 
  augment(flu_fit3, test_data)

flu_aug3test %>%
  select(BodyTemp, .pred)

#flu_aug3test %>%
#  rmse(BodyTemp , .pred) #Unable to get this to run!

```

## Univariate Model

```{r}
#create recipe
flu_rec4 <- recipe(BodyTemp ~ Myalgia, data = train_data)

#create workflow
flu_flow4 <- 
  workflow() %>%
  add_model(lm_reg) %>%
  add_recipe(flu_rec4)

#fit to training data
flu_fit4 <-
  flu_flow4 %>%
  fit(data = train_data)

flu_fit4 %>% 
  extract_fit_parsnip() %>% 
  tidy()
```

```{r}
#Use a trained workflow to predict
predict(flu_fit4, train_data)

#On trained data
flu_aug4train <- 
  augment(flu_fit4, train_data)

flu_aug4train %>%
  select(BodyTemp, .pred)

#flu_aug4train %>%
#  rmse(BodyTemp , .pred)#Unable to get this to run!

#On test data
flu_aug4test <- 
  augment(flu_fit4, test_data)

flu_aug4test %>%
  select(BodyTemp, .pred)

#flu_aug4test %>%
#  rmse(BodyTemp , .pred) #Unable to get this to run!

```
Unable to get RMSE to work after troubleshooting via several help pages.
